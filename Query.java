-- Table: public.ams_acc

-- DROP TABLE IF EXISTS public.ams_acc;

CREATE TABLE IF NOT EXISTS public.ams_acc
(
id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
firstname character varying(255) COLLATE pg_catalog."default" NOT NULL,
lastname character varying(255) COLLATE pg_catalog."default" NOT NULL,
age integer NOT NULL,
gender character varying COLLATE pg_catalog."default" NOT NULL,
email character varying(255) COLLATE pg_catalog."default" NOT NULL,
password character varying(120) COLLATE pg_catalog."default" NOT NULL,
role character varying COLLATE pg_catalog."default" NOT NULL,
CONSTRAINT "ams-acc_pkey" PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.ams_acc
OWNER to postgres;

//**********************************************************************************
-- Table: public.room_join_log

-- DROP TABLE IF EXISTS public.room_join_log;

CREATE TABLE IF NOT EXISTS public.room_join_log
(
room_id integer NOT NULL,
room_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
host_id integer NOT NULL,
member_id integer NOT NULL
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.room_join_log
OWNER to postgres;

//*************************************************************************************
-- Table: public.room_list

-- DROP TABLE IF EXISTS public.room_list;

CREATE TABLE IF NOT EXISTS public.room_list
(
room_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
room_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
room_password character varying(255) COLLATE pg_catalog."default" NOT NULL,
host_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
host_id integer NOT NULL,
status character varying(10) COLLATE pg_catalog."default" NOT NULL,
CONSTRAINT room_list_pkey PRIMARY KEY (room_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.room_list
OWNER to postgres;
